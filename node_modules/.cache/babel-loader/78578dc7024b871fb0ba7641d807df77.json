{"ast":null,"code":"import _slicedToArray from\"/Users/mosmie/Documents/GitHub/cosmos/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import FlexCard from\"../styled-components/FlexCard\";import FlexCardGradient from\"../styled-components/FlexCardGradient\";import FlexCardDescription from\"../styled-components/FlexCardDescription\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Card(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hover=_useState2[0],setHover=_useState2[1];var toggleHover=function toggleHover(){setHover(!hover);};var handleOpen=function handleOpen(route){props.onOpenModal(route);};return/*#__PURE__*/_jsxs(FlexCard,{onClick:function onClick(){return handleOpen(props.tile);},onMouseEnter:toggleHover,onMouseLeave:toggleHover,children:[/*#__PURE__*/_jsx(\"img\",{src:process.env.PUBLIC_URL+\"/images/\".concat(props.tile,\".png\"),alt:props.tile,style:{objectFit:\"cover\",maxWidth:\"100%\",borderRadius:\"10px\"}}),/*#__PURE__*/_jsx(FlexCardGradient,{isHover:hover,children:/*#__PURE__*/_jsx(FlexCardDescription,{isHover:hover,children:props.tile})})]});}export default Card;","map":{"version":3,"sources":["/Users/mosmie/Documents/GitHub/cosmos/src/components/Card.tsx"],"names":["React","useState","FlexCard","FlexCardGradient","FlexCardDescription","Card","props","hover","setHover","toggleHover","handleOpen","route","onOpenModal","tile","process","env","PUBLIC_URL","objectFit","maxWidth","borderRadius"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,+BAArB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,uCAA7B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,0CAAhC,C,wFAOA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAgC,eACJL,QAAQ,CAAC,KAAD,CADJ,wCACvBM,KADuB,eAChBC,QADgB,eAG9B,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBD,QAAQ,CAAC,CAACD,KAAF,CAAR,CACD,CAFD,CAIA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAmB,CACpCL,KAAK,CAACM,WAAN,CAAkBD,KAAlB,EACD,CAFD,CAIA,mBACE,MAAC,QAAD,EACE,OAAO,CAAE,yBAAMD,CAAAA,UAAU,CAACJ,KAAK,CAACO,IAAP,CAAhB,EADX,CAEE,YAAY,CAAEJ,WAFhB,CAGE,YAAY,CAAEA,WAHhB,wBAKE,YACE,GAAG,CAAEK,OAAO,CAACC,GAAR,CAAYC,UAAZ,mBAAoCV,KAAK,CAACO,IAA1C,QADP,CAEE,GAAG,CAAEP,KAAK,CAACO,IAFb,CAGE,KAAK,CAAE,CAAEI,SAAS,CAAE,OAAb,CAAsBC,QAAQ,CAAE,MAAhC,CAAwCC,YAAY,CAAE,MAAtD,CAHT,EALF,cAWE,KAAC,gBAAD,EAAkB,OAAO,CAAEZ,KAA3B,uBACE,KAAC,mBAAD,EAAqB,OAAO,CAAEA,KAA9B,UAAsCD,KAAK,CAACO,IAA5C,EADF,EAXF,GADF,CAiBD,CAED,cAAeR,CAAAA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport FlexCard from \"../styled-components/FlexCard\";\nimport FlexCardGradient from \"../styled-components/FlexCardGradient\";\nimport FlexCardDescription from \"../styled-components/FlexCardDescription\";\n\ninterface CardProps {\n  tile: string;\n  onOpenModal(name: string): any;\n}\n\nfunction Card(props: CardProps) {\n  const [hover, setHover] = useState(false);\n\n  const toggleHover = () => {\n    setHover(!hover);\n  };\n\n  const handleOpen = (route: string) => {\n    props.onOpenModal(route);\n  };\n\n  return (\n    <FlexCard\n      onClick={() => handleOpen(props.tile)}\n      onMouseEnter={toggleHover}\n      onMouseLeave={toggleHover}\n    >\n      <img\n        src={process.env.PUBLIC_URL + `/images/${props.tile}.png`}\n        alt={props.tile}\n        style={{ objectFit: \"cover\", maxWidth: \"100%\", borderRadius: \"10px\" }}\n      />\n\n      <FlexCardGradient isHover={hover}>\n        <FlexCardDescription isHover={hover}>{props.tile}</FlexCardDescription>\n      </FlexCardGradient>\n    </FlexCard>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}